import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


frame = 10  #.Frame number to plot.

#.Full path and name of data file.
dataFile = 'output_' + str(frame) + '.csv'

# Read the CSV file generated by the C code
data = pd.read_csv(dataFile)

# Reshape the data into a 2D field
# Create meshgrid using unique x and y values
x_values = data['x'].unique()
y_values = data['y'].unique()

# Ensure the data is sorted
x_values.sort()
y_values.sort()

# Create a 2D grid for the field data using the unique x and y
Xnodal = np.meshgrid(x_values, y_values)

# Reshape the 'value' column into a 2D array of the same shape as the meshgrid
fldInt = data.pivot(index='y', columns='x', values='value').values

# Plotting properties similar to the original code
figProp1a = (7., 5)  # Figure size
fig1a = plt.figure(figsize=figProp1a)
ax1a = fig1a.add_axes([0.08, 0.09, 0.78, 0.85])  # Position for main plot
cax1aPos = [0.865, 0.09, 0.02, 0.85]  # Position for the colorbar axis
cbar_ax1a = fig1a.add_axes(cax1aPos)

# Plotting the 2D field data using pcolormesh
hpl1a = ax1a.pcolormesh(Xnodal[0], Xnodal[1], fldInt, cmap='inferno')

# Set labels for the axes
ax1a.set_xlabel(r'$x$', fontsize=16, labelpad=-2)
ax1a.set_ylabel(r'$v_\parallel$', fontsize=16, labelpad=-1)

# Add colorbar to the plot
cbar = plt.colorbar(hpl1a, ax=ax1a, cax=cbar_ax1a)
cbar.set_label(r'$f(x, v_\parallel)$', rotation=270, labelpad=18, fontsize=16)

# Optionally save the figure if needed
# outFile = 'output_plot.png'
# plt.savefig(outFile, dpi=300)  # Save with high resolution

# Show the plot
plt.show()
